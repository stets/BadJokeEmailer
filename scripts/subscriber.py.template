{
    "Resources": {
        "subscriber": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.lambda_handler",
                "Runtime": "python3.6",
                "Role": "",
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "",
                            [
                            "import boto3\n",
                            "\n",
                            "# simple script to receive API POST requests and add users to SES subscribers within AWS\n",
                            "# setup the SNS connection\n",
                            "client = boto3.client('sns')\n",
                            "topic_arn = ''\n",
                            "\n",
                            "def lambda_handler(event, context):\n",
                            "    # grab email and API resource path\n",
                            "    email = event['body-json']['email']\n",
                            "    resourcePath = event['context']['resource-path']\n",
                            "\n",
                            "    # check resource and subscribe/unsubscribe the user based on it\n",
                            "    if resourcePath == '/subscribe':\n",
                            "        # add the email to the SNS topic specified by ARN\n",
                            "        client.subscribe(TopicArn=topic_arn, Protocol='email', Endpoint=email)\n",
                            "        return 'Hey there, your email'  + email + ' is now subscribed to bad jokes!'\n",
                            "    elif resourcePath == '/unsubscribe':\n",
                            "\n",
                            "        a = client.list_subscriptions()\n",
                            "        print a \n",
                            "        for each in a['Subscriptions']:\n",
                            "            print each['Endpoint']\n",
                            "            if email == each['Endpoint']:\n",
                            "                client.unsubscribe(SubscriptionArn=each['SubscriptionArn'])\n",
                            "\n",
                            "        # remove the email to the SNS topic specified by ARN\n",
                            "        return 'Sorry to hear that you didn't like our awesome jokes, we are now unsubscribing: ' + email, a\n"
                            ]
                        ]
                    }
                }
            }
        }
    }
}