{
    "Resources": {
        "badjokeEmailer": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": "LambdaSNS",
            "Properties": {
                "Handler": "index.lambda_handler",
                "Runtime": "python3.6",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaSNS",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "",
                            [
                                "from botocore.vendored import requests\n",
                                "import boto3\n",
                                "import json\n",
                                "\n",
                                "# Lambda function to request Chuck Norris jokes and then publish them to an SES feed\n",
                                "\n",
                                "# set up sns client\n",
                                "client = boto3.client('sns')\n",
                                "\n",
                                "def lambda_handler(event, context):\n",
                                "    # fire a request off at the Chuck Norris API and format it\n",
                                "    joke = requests.get('https://api.chucknorris.io/jokes/random', headers={'Content-Type': 'application/json'}).json()['value']\n",
                                "    data = json.dumps(joke)\n",
                                "    # put the topic ARN in a variable\n",
                                "    topic_arn = ''\n",
                                "    # publish the joke to the topic\n",
                                "    client.publish(Message=joke, TopicArn=topic_arn)\n",
                                "    # return the joke for debug purposes\n",
                                "    return joke\n"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "46b71565-97fe-4be0-b33b-b2fb35b47b29"
                }
            }
        },
        "subscriber": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": "LambdaSNS",
            "Properties": {
                "Handler": "index.lambda_handler",
                "Runtime": "python3.6",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaSNS",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "",
                            [
                                "import boto3\n",
                                "\n",
                                "# simple script to receive API POST requests and add users to SES subscribers within AWS\n",
                                "# setup the SNS connection\n",
                                "client = boto3.client('sns')\n",
                                "topic_arn = ''\n",
                                "\n",
                                "def lambda_handler(event, context):\n",
                                "    # grab email and API resource path\n",
                                "    email = event['body-json']['email']\n",
                                "    resourcePath = event['context']['resource-path']\n",
                                "\n",
                                "    # check resource and subscribe/unsubscribe the user based on it\n",
                                "    if resourcePath == '/subscribe':\n",
                                "        # add the email to the SNS topic specified by ARN\n",
                                "        client.subscribe(TopicArn=topic_arn, Protocol='email', Endpoint=email)\n",
                                "        return 'Hey there, your email'  + email + ' is now subscribed to bad jokes!'\n",
                                "    elif resourcePath == '/unsubscribe':\n",
                                "\n",
                                "        a = client.list_subscriptions()\n",
                                "        print a \n",
                                "        for each in a['Subscriptions']:\n",
                                "            print each['Endpoint']\n",
                                "            if email == each['Endpoint']:\n",
                                "                client.unsubscribe(SubscriptionArn=each['SubscriptionArn'])\n",
                                "\n",
                                "        # remove the email to the SNS topic specified by ARN\n",
                                "        return 'Sorry to hear that you didn't like our awesome jokes, we are now unsubscribing: ' + email, a\n"
                            ]
                        ]
                    }
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "fd9b4561-0852-4d7f-8706-832fedf09ba7"
                }
            }
        },
        "LambdaSNS": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2f532efb-b5da-4cea-a1d6-7225a879cd26"
                }
            }
        },
        "SNSFullAccess": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "sns:*"
                            ], 
                            "Resource": "*"
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "LambdaSNS"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "44b2c081-2f23-4d15-9cc9-5c8108a9a06f"
                }
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "46b71565-97fe-4be0-b33b-b2fb35b47b29": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 60,
                    "y": 80
                },
                "z": 1,
                "embeds": []
            },
            "fd9b4561-0852-4d7f-8706-832fedf09ba7": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 60,
                    "y": 180
                },
                "z": 0,
                "embeds": []
            },
            "2f532efb-b5da-4cea-a1d6-7225a879cd26": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -30,
                    "y": 130
                },
                "z": 0,
                "embeds": []
            },
            "44b2c081-2f23-4d15-9cc9-5c8108a9a06f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -140,
                    "y": 130
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": [
                    "2f532efb-b5da-4cea-a1d6-7225a879cd26"
                ]
            }
        }
    }
}